plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.11'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.node-gradle.node' version '2.2.4'
}

group = 'com.office'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Properties Encryption
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'

    // spring-dotenv(ENV)
    implementation 'me.paulschwarz:spring-dotenv:2.5.4'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // logback SQL
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'com.mysql:mysql-connector-j:8.0.33'

    // GCS
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter', version: '1.2.5.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-storage', version: '1.2.5.RELEASE'

    // WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

node {
    version = '22.11.0'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
    nodeModulesDir = file("${project.projectDir}/../front")
}

def frontDir = "$projectDir/../front"

tasks.register('installReactDeps', NpmTask) {
    workingDir = file(frontDir)
    args = ['install']
}

tasks.register('buildReact', NpmTask) {
    dependsOn installReactDeps
    workingDir = file(frontDir)
    args = ['run', 'build']
}

tasks.register('copyReactBuild', Copy) {
    dependsOn buildReact
    from("${frontDir}/build") {
        include "**/*"
    }
    into "${projectDir}/src/main/resources/static"
}

processResources {
    dependsOn copyReactBuild
}

bootJar {
    dependsOn copyReactBuild
}

test {
    useJUnitPlatform()
}

configurations.configureEach {
    exclude group: 'commons-logging', module: 'commons-logging'
}