{"version":3,"file":"static/js/611.24bad373.chunk.js","mappings":"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","sources":["components/contact/ContactForm.jsx","pages/Contact.jsx"],"sourcesContent":["// ContactForm.jsx\r\nimport { useState } from 'react';\r\nimport '../../styles/contact.css';\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [submitStatus, setSubmitStatus] = useState({\r\n    success: false,\r\n    error: false\r\n  });\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Name is required';\r\n    }\r\n    \r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Email is invalid';\r\n    }\r\n    \r\n    if (!formData.phone.trim()) {\r\n      newErrors.phone = 'Phone number is required';\r\n    }\r\n    \r\n    if (!formData.message.trim()) {\r\n      newErrors.message = 'Message is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Here you would typically send the form data to your server\r\n      // For now, we'll simulate a successful submission\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      setSubmitStatus({ success: true, error: false });\r\n      setFormData({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        message: ''\r\n      });\r\n      \r\n      setTimeout(() => {\r\n        setSubmitStatus({ success: false, error: false });\r\n      }, 5000);\r\n    } catch (error) {\r\n      setSubmitStatus({ success: false, error: true });\r\n      \r\n      setTimeout(() => {\r\n        setSubmitStatus({ success: false, error: false });\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"contact\">\r\n      <div className=\"contact-container\">\r\n        <div className=\"contact-header\">\r\n          <div className=\"icon-feature\">\r\n            <i className=\"bi bi-envelope\"></i>\r\n          </div>\r\n          <h2 className=\"contact-title\">Get in touch</h2>\r\n          <p className=\"contact-subtitle\">Let's work together!</p>\r\n        </div>\r\n\r\n        <div className=\"form-wrapper\">\r\n          <form onSubmit={handleSubmit} className=\"contact-form\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-wrapper\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                  className={`form-input ${errors.name ? 'error' : ''}`}\r\n                  placeholder=\"Full name\"\r\n                />\r\n                {errors.name && <div className=\"error-message\">{errors.name}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"input-wrapper\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                  className={`form-input ${errors.email ? 'error' : ''}`}\r\n                  placeholder=\"Email address\"\r\n                />\r\n                {errors.email && <div className=\"error-message\">{errors.email}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"input-wrapper\">\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleChange}\r\n                  className={`form-input ${errors.phone ? 'error' : ''}`}\r\n                  placeholder=\"Phone number\"\r\n                />\r\n                {errors.phone && <div className=\"error-message\">{errors.phone}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"input-wrapper\">\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={formData.message}\r\n                  onChange={handleChange}\r\n                  className={`form-input form-textarea ${errors.message ? 'error' : ''}`}\r\n                  placeholder=\"Message\"\r\n                  rows=\"4\"\r\n                ></textarea>\r\n                {errors.message && <div className=\"error-message\">{errors.message}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            {submitStatus.success && (\r\n              <div className=\"success-message\">\r\n                Message sent successfully!\r\n              </div>\r\n            )}\r\n\r\n            {submitStatus.error && (\r\n              <div className=\"error-message submit-error\">\r\n                Error sending message. Please try again.\r\n              </div>\r\n            )}\r\n\r\n            <button type=\"submit\" className=\"submit-button\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","import ContactForm from '../components/contact/ContactForm';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div className=\"page contact-page\">\r\n      <div className=\"container\">\r\n        <div className=\"bg-light rounded-4 py-5 px-4 px-md-5\">\r\n          <div className=\"text-center mb-5\">\r\n            <div className=\"feature bg-gradient-primary-to-secondary text-white rounded-3 mb-3\">\r\n              <i className=\"bi bi-envelope\"></i>\r\n            </div>\r\n            <h1 className=\"fw-bolder\">Get in touch</h1>\r\n            <p className=\"lead fw-normal text-muted mb-0\">Let's work together!</p>\r\n          </div>\r\n          <ContactForm />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"names":["ContactForm","formData","setFormData","useState","name","email","phone","message","errors","setErrors","submitStatus","setSubmitStatus","success","error","handleChange","e","value","target","prev","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","validateForm","newErrors","trim","test","Object","keys","length","Promise","resolve","setTimeout","type","onChange","placeholder","rows","Contact"],"sourceRoot":""}