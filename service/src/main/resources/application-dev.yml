server:
  port: 80
  servlet:
    encoding:
      charset: UTF-8
      force: true

spring:
  datasource:
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    url: ENC(y4u+tyociJ1VA/RUxxsyEr3tf8ZEKfbUDuPZJnv9RJw3uiWi/YZAuRMl4k0ct+ZmhJmBwCjKXNlpZ9+FjzFlAb5rE1iba73rOo7BPp6PnA2DElgYbFbFBQ==)
    username: ENC(koSJw3jZ7qC1qxXvJpmu4w==)
    password: ENC(Z8QnRjbYd8zc+DI0oKHi9Q==)
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: update  # 필요에 따라 create, create-drop, validate, none으로 변경
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    show-sql: true  # SQL 로그를 보고 싶은 경우
    open-in-view: false  # 경고 메시지 제거를 위해

  cloud:
    gcp:
      storage:
        credentials:
          location: classpath:credentials.json
        project-id: ENC(RGD0LCqXa8dSZzNwqwhc53WR6ITm8YlTFPRzf+StzN8Hh+Ts3ZRXLQ==)
        bucket: smart-office

logging:
  level:
    root: info
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql: trace
    com.google.cloud.storage: DEBUG
    com.google.api.client: DEBUG
    com.office: DEBUG

app:
  dir:
    imgdir: file:///C:/SmartOffice/imgs/  # 화면 출력 용
    uploadimgdir: C:/SmartOffice/imgs/    # 파일 Write 용
    logdir: file:///C:/SmartOffice/logs/
    readLogDir: C:/SmartOffice/logs/

